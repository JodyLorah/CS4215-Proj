import es from 'estree';
export declare const parseCodeError: Error;
/**
 * Strips out location information from an AST.
 *
 * The local imports test suites only care about the structure of the
 * transformed AST. The line & column numbers, as well as the character
 * offsets of each node in the ASTs derived from parsing the pre-transform
 * code & the equivalent post-transform code will not be the same.
 * Note that it is insufficient to pass in 'locations: false' into the acorn
 * parser as there will still be 'start' & 'end' properties attached to nodes
 * which represent character offsets.
 *
 * WARNING: Since this function is only used for test suites, it mutates
 * the original AST for convenience instead of creating a copy.
 *
 * @param node The AST which should be stripped of location information.
 */
export declare const stripLocationInfo: (node: es.AssignmentProperty | es.Property | es.CatchClause | es.ClassDeclaration | es.ClassExpression | es.ClassBody | es.ArrayExpression | es.ArrowFunctionExpression | es.AssignmentExpression | es.AwaitExpression | es.BinaryExpression | es.SimpleCallExpression | es.NewExpression | es.ChainExpression | es.ConditionalExpression | es.FunctionExpression | es.Identifier | es.ImportExpression | es.SimpleLiteral | es.RegExpLiteral | es.BigIntLiteral | es.LogicalExpression | es.MemberExpression | es.MetaProperty | es.ObjectExpression | es.SequenceExpression | es.TaggedTemplateExpression | es.TemplateLiteral | es.ThisExpression | es.UnaryExpression | es.UpdateExpression | es.YieldExpression | es.FunctionDeclaration | es.MethodDefinition | es.ImportDeclaration | es.ExportNamedDeclaration | es.ExportDefaultDeclaration | es.ExportAllDeclaration | es.ImportSpecifier | es.ImportDefaultSpecifier | es.ImportNamespaceSpecifier | es.ExportSpecifier | es.ObjectPattern | es.ArrayPattern | es.RestElement | es.AssignmentPattern | es.PrivateIdentifier | es.Program | es.PropertyDefinition | es.SpreadElement | es.ExpressionStatement | es.BlockStatement | es.StaticBlock | es.EmptyStatement | es.DebuggerStatement | es.WithStatement | es.ReturnStatement | es.LabeledStatement | es.BreakStatement | es.ContinueStatement | es.IfStatement | es.SwitchStatement | es.ThrowStatement | es.TryStatement | es.WhileStatement | es.DoWhileStatement | es.ForStatement | es.ForInStatement | es.ForOfStatement | es.VariableDeclaration | es.Super | es.SwitchCase | es.TemplateElement | es.VariableDeclarator) => es.AssignmentProperty | es.Property | es.CatchClause | es.ClassDeclaration | es.ClassExpression | es.ClassBody | es.ArrayExpression | es.ArrowFunctionExpression | es.AssignmentExpression | es.AwaitExpression | es.BinaryExpression | es.SimpleCallExpression | es.NewExpression | es.ChainExpression | es.ConditionalExpression | es.FunctionExpression | es.Identifier | es.ImportExpression | es.SimpleLiteral | es.RegExpLiteral | es.BigIntLiteral | es.LogicalExpression | es.MemberExpression | es.MetaProperty | es.ObjectExpression | es.SequenceExpression | es.TaggedTemplateExpression | es.TemplateLiteral | es.ThisExpression | es.UnaryExpression | es.UpdateExpression | es.YieldExpression | es.FunctionDeclaration | es.MethodDefinition | es.ImportDeclaration | es.ExportNamedDeclaration | es.ExportDefaultDeclaration | es.ExportAllDeclaration | es.ImportSpecifier | es.ImportDefaultSpecifier | es.ImportNamespaceSpecifier | es.ExportSpecifier | es.ObjectPattern | es.ArrayPattern | es.RestElement | es.AssignmentPattern | es.PrivateIdentifier | es.Program | es.PropertyDefinition | es.SpreadElement | es.ExpressionStatement | es.BlockStatement | es.StaticBlock | es.EmptyStatement | es.DebuggerStatement | es.WithStatement | es.ReturnStatement | es.LabeledStatement | es.BreakStatement | es.ContinueStatement | es.IfStatement | es.SwitchStatement | es.ThrowStatement | es.TryStatement | es.WhileStatement | es.DoWhileStatement | es.ForStatement | es.ForInStatement | es.ForOfStatement | es.VariableDeclaration | es.Super | es.SwitchCase | es.TemplateElement | es.VariableDeclarator;
